name: simple-socket-fn-logger
on:
  push:
    tags:
      - "v*"
jobs:
  build-jar-job:
    name: Build JAR Job
    runs-on: ubuntu-latest

    steps:

      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Build JAR'
        run: |
          ./gradlew shadowJar

      - name: 'Get Version Number'
        run: |
          echo "::set-env name=VERSION::$(./gradlew properties -q | grep "version:" | awk '{print $2}')"

      - name: 'Publish JAR'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'simple-socket-fn-logger-${{env.VERSION}}-all.jar'
          path: build/libs/*-all.jar

      - name: 'Create Release'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{github.ref}}
          release_name: Release ${{github.ref}}
          body: |
            Initial release
          draft: false
          prerelease: false

      - name: 'Upload Release Asset'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/simple-socket-fn-logger-${{env.VERSION}}-all.jar
          asset_name: simple-socket-fn-logger-${{env.VERSION}}-all.jar
          asset_content_type: application/java-archive


      - name: 'Write Upload URL To File'
        run: |
          echo "${{ steps.create_release.outputs.upload_url }}" > upload_url.txt

      - name: 'Publish Upload URL'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'upload_url.txt'
          path: 'upload_url.txt'

  build-linux-image:
    needs: [build-jar-job]
    name: Build Linux Image
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: '20.1.0.java11'

      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image

      - name: 'Get Version Number'
        run: |
          echo "::set-env name=VERSION::$(./gradlew properties -q | grep "version:" | awk '{print $2}')"

      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'simple-socket-fn-logger-${{env.VERSION}}-all.jar'

      - name: 'Get Release URL'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'

      - name: 'Get Upload URL'
        run: |
          echo "::set-env name=UPLOAD_URL::$(more upload_url.txt)"

      - name: 'Build Linux Image'
        run: |
          native-image --no-server --no-fallback -H:ReflectionConfigurationResources=reflection-config.json -H:IncludeResources=logback.xml --allow-incomplete-classpath -jar simple-socket-fn-logger-${{env.VERSION}}-all.jar

      - name: 'Publish Linux Image'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'simple-socket-fn-logger-${{env.VERSION}}-linux'
          path: 'simple-socket-fn-logger-${{env.VERSION}}-all'

      - name: 'Upload Linux Image Asset'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: 'simple-socket-fn-logger-${{env.VERSION}}-linux'
          asset_name: 'simple-socket-fn-logger-${{env.VERSION}}-linux'
          asset_content_type: application/octet-stream

  build-macos-image:
    needs: [build-jar-job]
    name: Build macOS Image
    runs-on: macos-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: '20.1.0.java11'

      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image

      - name: 'Get Version Number'
        run: |
          echo "::set-env name=VERSION::$(./gradlew properties -q | grep "version:" | awk '{print $2}')"

      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'simple-socket-fn-logger-${{env.VERSION}}-all.jar'

      - name: 'Get Release URL'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'

      - name: 'Get Upload URL'
        run: |
          echo "::set-env name=UPLOAD_URL::$(more upload_url.txt)"

      - name: 'Build macOS Image'
        run: |
          native-image --no-server --no-fallback -H:ReflectionConfigurationResources=reflection-config.json -H:IncludeResources=logback.xml --allow-incomplete-classpath -jar simple-socket-fn-logger-${{env.VERSION}}-all.jar

      - name: 'Publish macOS Image'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'simple-socket-fn-logger-${{env.VERSION}}-macos'
          path: 'simple-socket-fn-logger-${{env.VERSION}}-all'

      - name: 'Upload macOS Image Asset'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: 'simple-socket-fn-logger-${{env.VERSION}}-macos'
          asset_name: 'simple-socket-fn-logger-${{env.VERSION}}-macos'
          asset_content_type: application/octet-stream

  build-windows-image:
    needs: [build-jar-job]
    name: Build Windows Image
    runs-on: windows-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Setup Java 11'
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: 'Setup GraalVM Environment'
        uses: DeLaGuardo/setup-graalvm@2.0
        with:
          graalvm-version: '20.1.0.java11'

      - name: 'Install Native Image Plugin'
        run: |
          gu install native-image

      - name: 'Get Version Number'
        run: |
          echo "::set-env name=VERSION::$(./gradlew properties -q | grep "version:" | awk '{print $2}')"

      - name: 'Get JAR Artifact'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'simple-socket-fn-logger-${{env.VERSION}}-all.jar'

      - name: 'Get Release URL'
        uses: actions/download-artifact@v2-preview
        with:
          name: 'upload_url.txt'

      - name: 'Get Upload URL'
        run: |
          echo "::set-env name=UPLOAD_URL::$(more upload_url.txt)"

      - name: 'Build Windows Image'
        run: |
          native-image --no-server --no-fallback -H:ReflectionConfigurationResources=reflection-config.json -H:IncludeResources=logback.xml --allow-incomplete-classpath -jar simple-socket-fn-logger-${{env.VERSION}}-all.jar

      - name: 'Publish Windows Image'
        uses: actions/upload-artifact@v2-preview
        with:
          name: 'simple-socket-fn-logger-${{env.VERSION}}-windows.exe'
          path: 'simple-socket-fn-logger-${{env.VERSION}}-all'

      - name: 'Upload Windows Image Asset'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: 'simple-socket-fn-logger-${{env.VERSION}}-windows.exe'
          asset_name: 'simple-socket-fn-logger-${{env.VERSION}}-windows.exe'
          asset_content_type: application/octet-stream